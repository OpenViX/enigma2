<!--suppress XmlUnboundNsPrefix -->
<wizard>
from Components.AVSwitch import iAVSwitch as avSwitch
	<step id="inputselection" nextstep="modeselection" timeout="10" timeoutaction="selectnext">
		<condition>
self.condition = len(self.listInputChannels()) > 1
self.selection = "HDMI"
if len(self.listInputChannels()) == 1:
	self.selection = "HDMI"
	self.inputSelectionMoved()
		</condition>
		<text value="Video input selection\n\nPlease press OK if you can see this page on your TV (or select a different input port).\n\nThe next input port will be automatically probed in 10 seconds." />
		<displaytext value="Select video input with up/down buttons" />
		<list type="dynamic" source="listInputChannels" evaluation="inputSelectionMade" onselect="inputSelectionMoved" />
		<code>
self["portpic"].show()
self.clearSelectedKeys()
self.selectKey("OK")
		</code>
	</step>
	<step id="modeselection" nextstep="rateselection" timeout="10" timeoutaction="selectnext">
		<text value="Video mode selection." />
		<displaytext value="Select video mode" />
		<list type="dynamic" source="listModes" evaluation="modeSelectionMade" onselect="modeSelectionMoved" />
		<code>
self.clearSelectedKeys()
self.selectKey("UP")
self.selectKey("DOWN")
self["portpic"].hide()
		</code>
	</step>
	<step id="rateselection" nextstep="end" timeout="10" timeoutaction="selectnext">
		<condition>
self.condition = (self.port != "DVI" or self.mode == "PC")
		</condition>
		<text value="Refresh rate selection." />
		<displaytext value="Select refresh rate" />
		<list type="dynamic" source="listRates" evaluation="rateSelectionMade" onselect="rateSelectionMoved" />
		<code>
self.clearSelectedKeys()
self.selectKey("UP")
self.selectKey("DOWN")
		</code>
	</step>
	<step id="end">
		<code>
from Components.AVSwitch import iAVSwitch as avSwitch		
avSwitch.saveMode(self.port, self.mode, self.rate)
from Components.config import configfile
configfile.save()
self.markDone()
self.close()
		</code>
	</step>
</wizard>
